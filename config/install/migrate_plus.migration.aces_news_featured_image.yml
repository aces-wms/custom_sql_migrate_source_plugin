id: aces_news_featured_image
label: ACES NEWS Image File Import
migration_group: aces_news
migration_dependencies:
  required:
    - aces_news
  optional: {}
source:
  plugin: custom_sql_query
  key: oldnews
  keys:
    - nid
  sql_query: "SELECT ln.nid, fi.field_news_featured_image_target_id, fi.field_news_featured_image_alt, fi.field_news_featured_image_title, fm.uri FROM node ln LEFT JOIN node__field_news_featured_image fi ON fi.entity_id = ln.nid LEFT JOIN file_managed fm ON fi.field_news_featured_image_target_id = fm.fid WHERE ln.type='news' ORDER BY ln.nid ASC"
  constants:
    fileurl_1: 'https://aces.illinois.edu/sites/aces.illinois.edu/files/hero642/aces-hero_2.jpg'
    fileurl_2: '/original/'
    pub: 'public://documents/Giving documents/giving-aged-aces-leadership-academy.pdf'
    slash: '/'
destination:
  plugin: 'entity:node'
  default_bundle: news

process:
  #this is how we figure out which node id our source is matched with
  #migration lookup compares the ids between the source and drupal's end result
  #and hands back the correct nid
  nid:
    plugin: migration_lookup
    migration: aces_news
    source: nid
    no_stub: true
  #title is here because this import "recreates" the existing news node
  #so we grab the already present title.
  title:
    plugin: entity_value
    source: '@nid'
    entity_type: node
    langcode: en
    field_name: field_news_featured_image_title
  #build the url for the remote image. image is stored
  #under the id of the old news item
  remote_url:
    plugin: concat
    source:
      - constants/fileurl_1
      - id
      - constants/fileurl_2
      - image_mcb_file_name
  destination_name:
    plugin: concat
    source:
      - constants/pub
      - id
      - constants/slash
      - image_mcb_file_name
  #imports image from current mcb site and makes it a file entity.
  #drops images right into the public:// folder.
  image_download:
    plugin: image_import
    source: '@remote_url'
    uid: 1
    skip_on_missing_source: true
    file_exists: rename
  #creates a media image entity from the downloaded image and attaches it to
  #the field on the referencing node's featured image
  field_if_meda_featured_image:
    plugin: file_image_to_media
    source: '@image_download'
    bundle: image
    field: field_media_image
